#ifndef POSITIONS_H
#define POSITIONS_H


#include <QByteArray>
//unsigned char home_position[7] = {0xaa, 0xaa, 0x03, 0x1f, 0x00, 0x00, 0xe1};
// From device :                     aa, aa, 2, 1f, 0, e1


/*
 *  J1 = {-125.14, 125.8}
 *  J2 = {-5.1495, 90.8504} не может быть меньше 25.2105 при J3 = UpLimit
 *  J3 = {-15.82, 90.9473}
 *  Работаем в следующих пределах координат :
 *
 *  End Effector Center (x, y, z)
 *
 *  Х :
 *
 *  Y :
 *
 *  Z :
 *
 *  Точка (0, 0, 0) имеет высоту Z = 138mm "от пола", X = 79мм от края базы внутрь, Y = 79мм от края базы внутрь.   Z0 = (-79, -79. 138)
 *  135 + 147
 *
 *
 * Home position = (194.093, 18.5674, 135, 5.23554)
 *
 * GetHOMEParams = (194.093, 18.5674, 135, 5.23554)
 *
 * Switch OFF position = (21.9703, 0, -12.0929, 0)
 *
*/
unsigned char header[2] = {0xAA, 0xAA};
unsigned char home_position[7] = {0xaa, 0xaa, 0x03, 0x1f, 0x01, 0x00, 0xe0};

// special position  (X: 250, Y: 150, Z: 50, R: 150)
//                                               ID   Ctrl    ptpMode == MOVJ_XYZ
unsigned char spec_pos[23] = {0xaa, 0xaa, 0x13, 0x54, 0x03, 0x01, 0x00, 0x00, 0x7a, 0x43, 0x00, 0x00, 0x16, 0x43, 0x00, 0x00, 0x48, 0x42, 0x00, 0x00, 0x16, 0x43, 0xAF};
// From device :                  0xaa, 0xaa, 0x02, 0x1f, 0x01, 0xe0


unsigned char setPTPHeader[6]    = {0xaa, 0xaa, 0x13, 0x54, 0x03, 0x01}; // ptpMode == MOVJ_XYZ
unsigned char setPTPHeaderINC[6] = {0xaa, 0xaa, 0x13, 0x54, 0x03, 0x09}; // ptpMode == JUMP_MOVL_XYZ, // JUMP mode, (x,y,z,r) is the Cartesian coordinate increment
const char *dvName = "IQRJINR"; // LIT JINR Dobot Magician

unsigned char ask_pos[6] = {0xAA, 0xAA, 0x02, 0x0A, 0x00, 0xF6};


unsigned char getHOMeParams[6] = {0xAA, 0xAA, 0x02, 0x1E, 0x00, 0xE2};
// From device : 0xbc, 0x18, 0x42, 0x43, 0x14, 0x8a, 0x95, 0x42, 0x00, 0x00, 0x07, 0x43, 0x81, 0x8a, 0xa8, 0x41


unsigned char toHOMePosition[22] = {0xaa, 0xaa, 0x13, 0x54, 0x03,
                                    0x01,
                                    0x97, 0xfc, 0x41, 0x43, 0x59, 0x7a, 0x95, 0x42, 0x91, 0xf6, 0x06, 0x43, 0xa0, 0x90, 0xa8, 0x41
                                   };
// GetPose MOVEJUMP data
// 0xa0, 0x90, 0xa8, 0x41, 0x80, 0x86, 0x45, 0xbd, 0xc0, 0xfb, 0x6a, 0x3c, 0x00, 0x00, 0x00, 0x00,

 unsigned char crcSource[19] = { 0x54, 0x03, 0x01, 0x97, 0xfc, 0x41, 0x43, 0x59, 0x7a, 0x95, 0x42, 0x91, 0xf6, 0x06, 0x43, 0xa0, 0x90, 0xa8, 0x41};
//unsigned char *mycrcSource;

//                                                       29      id   rw   isQd
//const unsigned char set_device_name[34] = {0xaa, 0xaa, 0x1D, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
//                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
//                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1};

//QByteArray qbData(0xaa, 0xaa, 0x1D, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//                   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//                   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1);

// R = 0x1f == 31; 256 - 31 = 0xE1

//QByteArray qbData(0xaa, 0xaa);

#endif // POSITIONS_H
