/* This file is automatically generated by SCOptimizer */

#include "mcinfer.h"

fuzzy_model model={

0, /* model_ready set to OK */
1, /* engine code (algorithm type) */
0, /* min_inference_mode */
1, /* database type */
2, /* number of input variables */
4, /* number of output variables */

/* Input variable normalization parameters */
{{0.000934f,-0.070962f},{0.001082f,-0.113636f}},

/* Output variable normalization parameters */
{{0.017241f,-0.068966f},{0.066667f,-2.333333f},{0.043478f,-5.608696f},{0.011364f,-1.045455f}},

/* number of input MF's per variable*/ 
{9,5},
/* input MF paramteres */ 
{
	{descending,0.049486f,0,0,0.095553f},{triangular,0.161064f,0,0.119892f,0.119892f},{triangular,0.253268f,0,0.058143f,0.058143f},{triangular,0.361578f,0,0.150992f,0.150992f},{triangular,0.508403f,0,0.132512f,0.132512f},{triangular,0.622082f,0,0.086989f,0.086989f},{triangular,0.724090f,0,0.109976f,0.109976f},{triangular,0.856209f,0,0.145132f,0.145132f},{ascending,0.965686f,0,0.066256f,0},
	{descending,0.090391f,0,0,0.141715f},{triangular,0.268836f,0,0.215141f,0.272910f},{triangular,0.468580f,0,0.126542f,0.125599f},{triangular,0.643793f,0,0.224795f,0.223216f},{ascending,0.879550f,0,0.248254f,0}
	},

/* number of output MF's per variable*/ 
{5,5,5,5},
/* output MF paramteres */ 
{
	{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},
	{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},
	{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},
	{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0},{exact,0.000000f,0,0,0}
	},

/* Rule database */
45, /*number of rules */

/* index */
{0}, /* empty */
/* database */
{
	0xAB,0xB4,0xAA,0x3E,0xA7,0x72,0xA6,0x3E,0xF2,0x58,0xF3,0x3D,0x9F,0xC0,0x1D,0x3D,0x62,0x90,0x7C,0x3F,0xCA,0x1C,0x62,0x3F,0x60,0x03,0x7B,0x3F,0xD4,0x5D,0x3D,0x3F,0x0D,0xB0,0x59,0x3F,0x83,0x83,0x4F,0x3F,0x8C,0xB5,0x70,0x3F,0xD1,0x47,0x30,0x3F,0xD0,0xCA,0x0A,0x3F,0xD0,0xF4,0x35,0x3F,0x5C,0x9D,0x4E,0x3F,0xA3,0x32,0x4D,0x3F,0x6B,0xB9,0x4C,0x3F,0x90,0x7F,0x0F,0x3F,0xE3,0xA4,0xF5,0x3E,0xA7,0x8D,0x69,0x3F,0x83,0x6C,0x02,0x3E,0x81,0x08,0x81,0x3D,0xE9,0x8E,0x6A,0x3F,0xCD,0x64,0x4D,0x3F,0x3C,0xB7,0x5B,0x3F,0xFB,0x21,0x51,0x3F,0xAC,0xAF,0x29,0x3F,0x4E,0x6A,0x4D,0x3F,0x00,0xC0,0x03,0x3F,0x3A,0x51,0x39,0x3F,0xF2,0x90,0x33,0x3F,0x02,0xCF,0x22,0x3F,0xA4,0xCD,0x0A,0x3F,0x76,0x4F,0x75,0x3F,0xD8,0x9D,0xDF,0x3E,0xA4,0x91,0x43,0x3F,0x00,0x62,0xB1,0x3E,0x01,0xD1,0xFF,0x3E,0xDE,0x0D,0x4F,0x3F,0x31,0x16,0x77,0x3F,0xA4,0x7C,0x23,0x3E,0x99,0x9C,0x18,0x3E,0x9D,0xDC,0x1B,0x3E,0x90,0x79,0x10,0x3F,0xF8,0xB9,0x26,0x3F,0x17,0x0D,0xB0,0x3E,0xB7,0xEC,0x37,0x3E,0x8B,0x03,0x7B,0x3E,0x93,0xA3,0x12,0x3F,0xC1,0xF0,0xC1,0x3D,0xD6,0x6E,0x55,0x3F,0x3B,0xA9,0xDD,0x3E,0x5F,0x00,0xD5,0x3E,0xB9,0xAA,0xB6,0x3E,0x86,0x5D,0x33,0x3F,0xF8,0xA0,0x19,0x3F,0xDE,0xE1,0x03,0x3E,0xEE,0xF8,0xEC,0x3E,0xEE,0xEB,0x47,0x3E,0xFD,0x08,0x7D,0x3F,0xF5,0xDA,0xF3,0x3E,0x5E,0x89,0x90,0x3D,0x8D,0x2F,0x0D,0x3F,0x7D,0x2A,0x9D,0x3E,
	0xDA,0x4E,0x59,0x3F,0x8D,0xA4,0x0C,0x3F,0xE3,0x24,0x64,0x3F,0x3E,0x77,0x00,0x3F,0x93,0x94,0x13,0x3F,0xAE,0xBB,0x2D,0x3F,0xB6,0xDA,0xB5,0x3E,0xF7,0xD3,0x30,0x3E,0x5A,0xE8,0x8A,0x3E,0xE1,0x84,0xE0,0x3E,0x46,0x8C,0x4A,0x3F,0x06,0x06,0x31,0x3F,0xB1,0x5E,0xC7,0x3C,0xEB,0xF4,0x6A,0x3F,0x33,0x7C,0x1C,0x3E,0xE1,0xB0,0x61,0x3F,0xCF,0x1E,0x4F,0x3F,0x70,0x5C,0x54,0x3E,0xD9,0xD0,0x57,0x3F,0x4A,0x16,0x11,0x3E,0xBD,0x4C,0xBD,0x3E,0x91,0x45,0x12,0x3F,0xD5,0x34,0xD5,0x3E,0x80,0xBC,0xCA,0x3E,0x74,0x81,0x12,0x3B,0xD7,0x76,0x56,0x3F,0xE2,0x57,0xA7,0x3C,0xAA,0x46,0x0D,0x3D,0x69,0x46,0x8C,0x3E,0x65,0xD4,0x39,0x3F,0xBC,0x37,0x00,0x3E,0x4B,0xA1,0x99,0x3D,0x4E,0x69,0x0E,0x3E,0x2E,0x7D,0x69,0x3E,0x6F,0xCF,0xC2,0x3C,0x0F,0x75,0xA3,0x3D,0x9D,0x71,0x1D,0x3F,0xA9,0x20,0x29,0x3F,0xCC,0x44,0xCC,0x3E,0x8D,0x34,0xD0,0x3E,0x95,0xF2,0x15,0x3F,0x9B,0xFD,0x1A,0x3F,0xDE,0x22,0xDE,0x3E,0xF0,0xC8,0xAF,0x3E,0x3B,0x31,0x31,0x3E,0xA3,0x88,0xA2,0x3D,0xE5,0x24,0x4E,0x3E,0x7D,0x1C,0x9C,0x3E,0xC5,0xB3,0x37,0x3E,0xAF,0x57,0x60,0x3E,0xE5,0x75,0x94,0x3E,0xB4,0x1D,0x0B,0x3F,0x20,0x56,0x85,0x3D,0xA4,0xB1,0x7A,0x3E,0x93,0xCE,0x14,0x3D,0x2E,0x5D,0x4D,0x3E,0x87,0x43,0x08,0x3F,0xE0,0x5E,0xDF,0x3E,0xBE,0x15,0x3E,0x3F,0xF1,0xAB,0x81,0x3E,0xDE,0x02,0xDF,0x3E,0xB5,0x90,0x33,0x3F,0xE1,0xD0,0xDF,0x3D,0xBA,0xC4,0x86,0x3D,
	0xAD,0xEE,0x52,0x3E,0x1E,0x3B,0x84,0x3E,0x33,0xCC,0xAF,0x3D,0x2B,0x4F,0xA7,0x3E,0xB3,0xDF,0x59,0x3E,0xF7,0xD8,0x90,0x3E,0xFF,0x9C,0x9B,0x3E,0x5C,0x9F,0x22,0x3E,0x08,0x64,0xD4,0x3C,0x33,0xA7,0x4C,0x3D,0x8C,0x3D,0xC0,0x3D,0x54,0xA5,0x06,0x3D,0xDC,0x17,0x5C,0x3F,0xDE,0xB4,0x5D,0x3F,0xD9,0xCE,0x58,0x3F,0xAF,0xB9,0x86,0x3D,0x97,0x51,0x18,0x3F,0xAC,0x79,0x2B,0x3F,0xFF,0xD6,0x7F,0x3F,0xEC,0xD8,0x5B,0x3E,0xC5,0xE5,0x23,0x3E,0xA2,0x69,0xC3,0x3E,0x87,0x36,0xA5,0x3D,0x20,0xC5,0x2E,0x3E,0x59,0xF8,0x9E,0x3D,0x66,0x10,0x89,0x3E,0xA4,0xA1,0xBE,0x3C,0x71,0xD6,0x74,0x3E,0x59,0x72,0x3F,0x3D,0xD3,0x48,0x54,0x3D,0x24,0xE7,0xBD,0x3B,0xC8,0x2D,0x7B,0x3D,0xCD,0xD4,0xCC,0x3E,0xE7,0x78,0x66,0x3E,0xD5,0xE6,0xD5,0x3E,0x0B,0x4F,0x14,0x3E,0xD9,0x50,0xD8,0x3E,0xBE,0xAC,0x3B,0x3E,0xF0,0x3A,0xF1,0x3E,0x20,0x59,0xA0,0x3D,0x31,0xC1,0x3F,0x3D,0xEA,0xE4,0x93,0x3E,0x0B,0xE8,0x8D,0x3D,0xB0,0x80,0xFB,0x3C,0x3A,0x9D,0x7A,0x3D,0xE2,0x62,0x62,0x3E,0x5B,0x37,0x54,0x3D,0x7F,0x18,0x05,0x3E,0x23,0x12,0x88,0x3D,0xF4,0xE6,0x0E,0x3C,0xD5,0x30,0xD4,0x3C,0x8F,0x8C,0x8F,0x3D
},

/* input data and other run-time fields*/

{0}

}; /* done */
